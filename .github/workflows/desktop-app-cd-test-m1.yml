name: Leapp Desktop App CD test Linux

on:
  push:
    branches:
      - LEAP-667-create-session-api-for-leapp-template

env:
  S3_BUCKET: s3://noovolari-leapp-website-distribution-test
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  CERTIFICATE_APPLICATION_OSX_P12: ${{ secrets.CERTIFICATE_APPLICATION_OSX_P12 }}
  CERTIFICATE_OSX_P12: ${{ secrets.CERTIFICATE_OSX_P12 }}
  DECODE_PASSWORD: ${{ secrets.DECODE_PASSWORD }}
  DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
  WIN_CERTIFICATE: ${{ secrets.WIN_CERTIFICATE }}
  WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

jobs:
  build-macos-arm:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build macOS arm64 desktop app
        uses: nick-fields/retry@v2
        env:
          APPLE_NOTARISATION_PASSWORD: ${{ secrets.APPLE_NOTARISATION_PASSWORD }}
        with:
          timeout_minutes: 20
          max_attempts: 5
          command: |
            cd packages/desktop-app
            KEY_CHAIN=build.keychain
            CERTIFICATE_P12=certificate.p12
            CERTIFICATE_APPLICATION_P12=certificate-application.p12
            echo "Recreate the certificate from the secure environment variable"
            echo "security create-keychain"
            echo "${{ env.CERTIFICATE_OSX_P12 }}" | base64 --decode > $CERTIFICATE_P12
            echo "${{ env.CERTIFICATE_APPLICATION_OSX_P12 }}" | base64 --decode > $CERTIFICATE_APPLICATION_P12
            security create-keychain -p ${{ env.KEYCHAIN_PASSWORD }} $KEY_CHAIN
            echo "security list-keychains"
            security list-keychains -s login.keychain build.keychain
            echo "security default-keychain"
            security default-keychain -s $KEY_CHAIN
            echo "security unlock-keychain"
            security unlock-keychain -p ${{ env.KEYCHAIN_PASSWORD }} $KEY_CHAIN
            echo "security import"
            security import $CERTIFICATE_P12 -k $KEY_CHAIN -P '${{ env.DECODE_PASSWORD }}' -T /usr/bin/codesign;
            security import $CERTIFICATE_APPLICATION_P12 -k $KEY_CHAIN -P '${{ env.DECODE_PASSWORD }}' -T /usr/bin/codesign;
            echo "security find-identity"
            security find-identity -v
            echo "security set-key-partition-list"
            security set-key-partition-list -S apple-tool:,apple:,codesign:, -s -k ${{ env.KEYCHAIN_PASSWORD }} $KEY_CHAIN
            rm -fr *.p12
            npm install
            npm run set-target-arm64
            npm run release-mac

      - name: Clean build
        run: |
          cd packages/desktop-app
          rm -Rf ./release/mac
          rm -Rf ./release/mac-unpacked
          rm -Rf ./release/.cache
          rm -Rf ./release/builder-debug.yml
          rm -Rf ./release/builder-effective-config.yaml
          rm -Rf ./release/mac-arm64
          rm "./release/Leapp-0.14.3-arm64-mac.zip"
          rm "./release/Leapp-0.14.3-arm64-mac.zip.blockmap"
          zip "./release/Leapp-0.14.3-mac-arm64.zip" "./release/Leapp-0.14.3-arm64.dmg"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Release draft to S3
        run: |
          cd packages/desktop-app
          aws s3 cp ./release/ "${{ env.S3_BUCKET }}/m1/" --recursive
