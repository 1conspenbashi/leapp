{
    "name": "LookAuthLite",
    "version": "0.14.5",
    "author": {
        "name": "beSharp",
        "email": "info@besharp.it"
    },
    "description": "Straight programmatic access via Single Sign-on to all your AWS accounts and resources.",
    "contributors": [
        {
            "name": "Alessandro Gaggia",
            "email": "alex@besharp.it"
        },
        {
            "name": "Paolo Diciaula",
            "email": "paolo.diciaula@besharp.it"
        }
    ],
    "private": true,
    "category": "public.app-category.developer-tools",
    "homepage": "https://www.noovolari.com",
    "main": "electron/dist/electron/main.js",
    "scripts": {
        "ng": "ng",
        "start": "ng serve",
        "build": "rm -rf electron/dist && cp src/assets/icons/* dist/noovolari-eddie-client/ && ng build --base-href ./",
        "test": "ng test",
        "lint": "ng lint",
        "extract": "ngx-translate-extract --input ./src --output ./src/assets/i18n/en.json ./src/assets/i18n/it.json --clean --sort --format namespaced-json --marker _",
        "electron-dev": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/noovolari-eddie-client && cp -a src/assets/icons/* dist/noovolari-eddie-client/ && ng build --aot --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron --enable-accelerated-mjpeg-decode --enable-accelerated-video --ignore-gpu-blacklist --enable-native-gpu-memory-buffers --enable-gpu-rasterization --ignore-gpu-blacklist .",
        "electron-stag": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/noovolari-eddie-client && cp -a src/assets/icons/* dist/noovolari-eddie-client/ && ng build --configuration staging --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron .",
        "electron-prod": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/noovolari-eddie-client && cp -a src/assets/icons/* dist/noovolari-eddie-client/ && ng build --configuration production --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron .",
        "electron-win": "DEL /Q electron\\dist && ng build --base-href ./ && tsc --p electron && electron .",
        "e2e": "ng e2e",
        "pack": "electron-builder --dir",
        "dist-mac-dev": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build",
        "dist-mac-stag": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build",
        "dist-mac-prod": "node scripts/changeProductName.js minor && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build -p always",
        "dist-deb-dev": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --linux",
        "dist-deb-stag": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --linux",
        "dist-deb-prod": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build -p always --linux",
        "dist-win-dev": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --win --x64",
        "dist-win-stag": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --win --x64",
        "dist-win-prod": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build -p always --win --x64",
        "dist-all-dev": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --mac --win --linux",
        "dist-all-stag": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --mac --win --linux",
        "dist-all-prod": "node scripts/changeProductName.js && rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build -p always --mac --win --linux"
    },
    "build": {
        "publish": {
            "provider": "s3",
            "bucket": "lookauth-lite.clients"
        },
        "afterSign": "scripts/notarize.js",
        "productName": "LookAuth Lite",
        "icon": "src/assets/icons/icon.icns",
        "files": [
            "dist/noovolari-eddie-client/*",
            "dist/noovolari-eddie-client/**/*",
            "node_modules/**/*",
            "package.json",
            "electron/dist/*",
            "electron/dist/**/*",
            "dist/icon.icns",
            "dist/icon.ico",
            "dist/icon.png"
        ],
        "directories": {
            "output": "release",
            "buildResources": "dist"
        },
        "appId": "com.lookauth.app",
        "dmg": {
            "icon": "src/assets/icons/icon.icns",
            "background": "src/assets/icons/background.png",
            "contents": [
                {
                    "x": 110,
                    "y": 150
                },
                {
                    "x": 240,
                    "y": 150,
                    "type": "link",
                    "path": "/Applications"
                }
            ]
        },
        "linux": {
            "category": "Utility",
            "synopsis": "LookAuth Client is a tool that allows the user to obtain secure, temporary and refreshable credentials to access AWS Services with AWS CLI and tools based on it",
            "description": "LookAuth Client is a tool that allows the user to obtain secure, temporary and refreshable credentials to access AWS Services with AWS CLI and tools based on it, with versioning tools that work with AWS CodeCommit service and to easily use AWS SDK from your local environment during your everyday development.",
            "icon": "src/assets/icons/1024x1024.png",
            "desktop": {
                "Icon": "/usr/share/icons/hicolor/0x0/apps/lookauthlite.png"
            },
            "target": [
                "deb"
            ]
        },
        "win": {
            "target": [
                "nsis"
            ],
            "icon": "src/assets/images/LookAuth.ico",
            "legalTrademarks": "beSharp srl",
            "publisherName": "beSharp srl",
            "requestedExecutionLevel": "highestAvailable",
            "verifyUpdateCodeSignature": false
        },
        "mac": {
            "icon": "src/assets/images/LookAuth.icns",
            "forceCodeSigning": true,
            "hardenedRuntime": true,
            "entitlements": "./build/entitlements.mac.plist",
            "entitlementsInherit": "./build/entitlements.mac.plist",
            "gatekeeperAssess": false,
            "target": [
                "dmg",
                "zip"
            ]
        }
    },
    "dependencies": {
        "@angular/animations": "~8.1.0",
        "@angular/common": "~8.1.0",
        "@angular/compiler": "~8.1.0",
        "@angular/core": "~8.1.0",
        "@angular/forms": "~8.1.0",
        "@angular/platform-browser": "~8.1.0",
        "@angular/platform-browser-dynamic": "~8.1.0",
        "@angular/router": "~8.1.0",
        "@ng-select/ng-select": "^3.0.5",
        "@ngx-translate/core": "^11.0.1",
        "@ngx-translate/http-loader": "^4.0.0",
        "@sebgroup/ng-magic-iframe": "^1.0.2",
        "@types/jest": "^25.1.4",
        "aws-sdk": "^2.589.0",
        "bootstrap": "^4.3.1",
        "chdir": "0.0.0",
        "copy-dir": "^1.1.0",
        "crypto-js": "^3.1.9-1",
        "electron-log": "^3.0.6",
        "electron-notarize": "^0.1.1",
        "electron-osx-sign": "^0.4.14",
        "electron-reload": "^1.5.0",
        "electron-updater": "^4.2.2",
        "extract-zip": "^1.6.7",
        "fs-extra": "^8.1.0",
        "ini": "^1.3.5",
        "jwt-decode": "^2.2.0",
        "md5-file": "^4.0.0",
        "menubar": "^6.0.3",
        "mousetrap": "^1.6.3",
        "ngx-bootstrap": "^4.2.0",
        "ngx-json-viewer": "^2.4.0",
        "ngx-toastr": "^10.0.4",
        "node-machine-id": "^1.1.12",
        "rimraf": "^3.0.0",
        "rxjs": "~6.4.0",
        "saml-encoder-decoder-js": "^1.0.1",
        "semver": "^6.3.0",
        "sudo-prompt": "^9.0.0",
        "tslib": "^1.9.0",
        "v8-compile-cache": "^2.1.0",
        "zlib": "^1.0.5",
        "zone.js": "~0.9.1"
    },
    "devDependencies": {
        "@angular-devkit/build-angular": "^0.803.24",
        "@angular/cli": "~8.1.0",
        "@angular/compiler-cli": "~8.1.0",
        "@angular/language-service": "~8.1.0",
        "@biesbjerg/ngx-translate-extract": "^2.3.4",
        "@types/jasmine": "~3.3.8",
        "@types/jasminewd2": "~2.0.3",
        "@types/node": "^10.17.13",
        "codelyzer": "^5.0.0",
        "electron": "^8.0.1",
        "electron-builder": "^22.2.0",
        "electron-builder-squirrel-windows": "^21.1.3",
        "electron-installer-dmg": "^3.0.0",
        "electron-packager": "^14.0.2",
        "jasmine-core": "~3.4.0",
        "jasmine-spec-reporter": "~4.2.1",
        "karma": "^4.4.1",
        "karma-chrome-launcher": "~2.2.0",
        "karma-coverage-istanbul-reporter": "~2.0.1",
        "karma-jasmine": "~2.0.1",
        "karma-jasmine-html-reporter": "^1.4.0",
        "protractor": "~5.4.0",
        "ts-node": "~7.0.0",
        "tslint": "~5.15.0",
        "typescript": "~3.4.3"
    }
}
